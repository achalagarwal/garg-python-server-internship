"""update warehouse_inventory with projected_quantities

Revision ID: e0b8061d03b8
Revises: 6f0943512589
Create Date: 2022-06-05 17:53:27.226555

"""
from typing import List

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.orm import load_only
from sqlalchemy.orm.session import Session

from alembic import op
from app.models import WarehouseInventory

# revision identifiers, used by Alembic.
revision = 'e0b8061d03b8'
down_revision = '6f0943512589'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.add_column('warehouse_inventory', sa.Column('projected_quantities', postgresql.ARRAY(sa.Integer()), server_default='{}', nullable=False))
    op.alter_column('warehouse_inventory', 'sku_variants',
               existing_type=postgresql.ARRAY(postgresql.UUID()),
               server_default='{}')
    op.alter_column('warehouse_inventory', 'quantities',
               existing_type=postgresql.ARRAY(sa.INTEGER()),
               server_default='{}')


    session = Session(bind=op.get_bind())

    query = sa.select(WarehouseInventory).options(load_only("id", "projected_quantities", "quantities"))
    warehouse_inventories: List[WarehouseInventory] = session.execute(query).scalars().all()
    
    for warehouse_inventory in warehouse_inventories:
        if len(warehouse_inventory.quantities) > 0:
            warehouse_inventory.projected_quantities = warehouse_inventory.quantities

    session.commit()
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('warehouse_inventory', 'quantities',
               existing_type=postgresql.ARRAY(sa.INTEGER()),
               server_default=None)
    op.alter_column('warehouse_inventory', 'sku_variants',
               existing_type=postgresql.ARRAY(postgresql.UUID()),
               server_default=None)
    op.drop_column('warehouse_inventory', 'projected_quantities')
    # ### end Alembic commands ###
